// Package docs GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import (
	"bytes"
	"encoding/json"
	"strings"
	"text/template"

	"github.com/swaggo/swag"
)

var doc = `{
    "swagger": "2.0",
    "info": {
        "description": "Little twitter app",
        "title": "l-twitter",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/v1/",
    "paths": {
        "/api-twitter/follow": {
            "post": {
                "description": "Post a new follower",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "follower"
                ],
                "summary": "follower",
                "operationId": "post-follower",
                "parameters": [
                    {
                        "description": "Set a new follower user",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.doFollowerRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.followerResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/api-twitter/tweet": {
            "post": {
                "description": "Post a new tweet message",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tweet"
                ],
                "summary": "Post a tweet",
                "operationId": "tweet",
                "parameters": [
                    {
                        "description": "Post a new tweet",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.doTweetRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.tweetResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/api-twitter/timeline/{userId}": {
            "get": {
                "description": "Get timeline for a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "timeline"
                ],
                "summary": "timeline",
                "operationId": "get-timeline",
                "parameters": [
                    {
                        "description": "User Id",
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.timelineResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "v1.followerResponse": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "integer",
                    "example": 1
                },
                "user_id_followed": {
                    "type": "integer",
                    "example": 2
                },
                "start_date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2017-07-21T17:32:28Z"
                }
            }
        },
        "v1.tweetResponse": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "integer",
                    "example": 1
                },
                "text": {
                    "type": "string",
                    "example": "tweet message"
                },
                "datetime": {
                   "type": "string",
                    "format": "date-time",
                    "example": "2017-07-21T17:32:28Z"
                }
            }
        },
        "v1.doFollowerRequest": {
            "type": "object",
            "required": [
                "user_id",
                "user_id_followed"
            ],
            "properties": {
                "user_id": {
                    "type": "integer",
                    "example": 1
                },
                "user_id_followed": {
                    "type": "integer",
                    "example": 2
                },
                "start_date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2017-07-21T17:32:28Z"
                }
            }
        },
        "v1.doTweetRequest": {
            "type": "object",
            "required": [
                "user_id",
                "text",
                "datetime"
            ],
            "properties": {
                "user_id": {
                    "type": "integer",
                    "example": 1
                },
                "text": {
                    "type": "string",
                    "example": "tweet message"
                },
                "datetime": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2017-07-21T17:32:28Z"
                }
            }
        },
        "v1.timelineResponse": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "integer",
                    "example": 1
                },
                "tweets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.tweet"
                    }
                }
            }
        },
        "v1.response": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "message"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "localhost:8080",
	BasePath:    "/v1",
	Schemes:     []string{},
	Title:       "Little Twitter App",
	Description: "Little twitter application API",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
		"escape": func(v interface{}) string {
			// escape tabs
			str := strings.Replace(v.(string), "\t", "\\t", -1)
			// replace " with \", and if that results in \\", replace that with \\\"
			str = strings.Replace(str, "\"", "\\\"", -1)
			return strings.Replace(str, "\\\\\"", "\\\\\\\"", -1)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}